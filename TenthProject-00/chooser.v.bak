module chooser(clk,sel,outc);
	input clk,sel;
	output reg [3:0] outc;
	parameter S0 = 4'd1,S1 = 4'd6,S2 = 4'd0,S3 = 4'd7,S4 = 4'd5;
	reg [2:0] state;
	always @ (posedge clks)
		case(state)
			4'd0: state <= 1;
			4'd1: state <= 2;
			4'd2: state <= 3;
			4'd3: state <= 4;
			4'd4: state <= 5;
			4'd5: state <= 6;
			4'd6: state <= 7;
			4'd7: state <= 0;
			default:state <= 0;
		endcase
	
	always @ (posedge clk)
		if(sel)begin
			case(state)
				4'd0: outs = S0;
				4'd1: outs = S1;
				4'd2: outs = S2;
				4'd3: outs = S3;
				4'd4: outs = S0;
				4'd5: outs = S2;
				4'd6: outs = S2;
				4'd7: outs = S4;
				default:outs = 4'b1110;
			endcase
		end
		else begin
			case(state)
				4'd0: outs = S0;
				4'd1: outs = S1;
				4'd2: outs = S2;
				4'd3: outs = S3;
				4'd4: outs = S0;
				4'd5: outs = S2;
				4'd6: outs = S0;
				4'd7: outs = S3;
				default:outs = 4'b1110;
			endcase
		end