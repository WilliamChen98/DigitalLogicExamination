// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "12/06/2017 20:31:56"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Counter_2421_16071005 (
	clk,
	Q,
	z);
input 	clk;
output 	[3:0] Q;
output 	z;

// Design Ports Information
// Q[0]	=>  Location: PIN_D12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q[1]	=>  Location: PIN_C11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q[2]	=>  Location: PIN_C12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q[3]	=>  Location: PIN_D11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// z	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J7,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Q[0]~output_o ;
wire \Q[1]~output_o ;
wire \Q[2]~output_o ;
wire \Q[3]~output_o ;
wire \z~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \WideOr1~0_combout ;
wire \Q[2]~reg0_q ;
wire \WideOr2~0_combout ;
wire \Q[1]~reg0_q ;
wire \WideOr3~0_combout ;
wire \Q[0]~reg0_q ;
wire \WideOr0~0_combout ;
wire \Q[3]~reg0_q ;


// Location: IOOBUF_X33_Y28_N9
cycloneiv_io_obuf \Q[0]~output (
	.i(\Q[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[0]~output .bus_hold = "false";
defparam \Q[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X31_Y31_N2
cycloneiv_io_obuf \Q[1]~output (
	.i(\Q[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[1]~output .bus_hold = "false";
defparam \Q[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X31_Y31_N9
cycloneiv_io_obuf \Q[2]~output (
	.i(\Q[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[2]~output .bus_hold = "false";
defparam \Q[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X33_Y28_N2
cycloneiv_io_obuf \Q[3]~output (
	.i(\Q[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[3]~output .bus_hold = "false";
defparam \Q[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N2
cycloneiv_io_obuf \z~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\z~output_o ),
	.obar());
// synopsys translate_off
defparam \z~output .bus_hold = "false";
defparam \z~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N15
cycloneiv_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G17
cycloneiv_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X32_Y28_N0
cycloneiv_lcell_comb \WideOr1~0 (
// Equation(s):
// \WideOr1~0_combout  = (\Q[2]~reg0_q  & (\Q[3]~reg0_q  & ((!\Q[1]~reg0_q ) # (!\Q[0]~reg0_q )))) # (!\Q[2]~reg0_q  & (((\Q[0]~reg0_q  & \Q[1]~reg0_q ))))

	.dataa(\Q[3]~reg0_q ),
	.datab(\Q[0]~reg0_q ),
	.datac(\Q[2]~reg0_q ),
	.datad(\Q[1]~reg0_q ),
	.cin(gnd),
	.combout(\WideOr1~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr1~0 .lut_mask = 16'h2CA0;
defparam \WideOr1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X32_Y28_N1
dffeas \Q[2]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\WideOr1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Q[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Q[2]~reg0 .is_wysiwyg = "true";
defparam \Q[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X32_Y28_N2
cycloneiv_lcell_comb \WideOr2~0 (
// Equation(s):
// \WideOr2~0_combout  = (\Q[3]~reg0_q  & (\Q[2]~reg0_q  & (\Q[0]~reg0_q  $ (\Q[1]~reg0_q )))) # (!\Q[3]~reg0_q  & ((\Q[0]~reg0_q  & (!\Q[1]~reg0_q  & !\Q[2]~reg0_q )) # (!\Q[0]~reg0_q  & (\Q[1]~reg0_q  $ (\Q[2]~reg0_q )))))

	.dataa(\Q[3]~reg0_q ),
	.datab(\Q[0]~reg0_q ),
	.datac(\Q[1]~reg0_q ),
	.datad(\Q[2]~reg0_q ),
	.cin(gnd),
	.combout(\WideOr2~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr2~0 .lut_mask = 16'h2914;
defparam \WideOr2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X32_Y28_N3
dffeas \Q[1]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\WideOr2~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Q[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Q[1]~reg0 .is_wysiwyg = "true";
defparam \Q[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X32_Y28_N28
cycloneiv_lcell_comb \WideOr3~0 (
// Equation(s):
// \WideOr3~0_combout  = (!\Q[0]~reg0_q  & ((\Q[3]~reg0_q  & ((\Q[2]~reg0_q ))) # (!\Q[3]~reg0_q  & ((!\Q[2]~reg0_q ) # (!\Q[1]~reg0_q )))))

	.dataa(\Q[3]~reg0_q ),
	.datab(\Q[1]~reg0_q ),
	.datac(\Q[0]~reg0_q ),
	.datad(\Q[2]~reg0_q ),
	.cin(gnd),
	.combout(\WideOr3~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr3~0 .lut_mask = 16'h0B05;
defparam \WideOr3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X32_Y28_N29
dffeas \Q[0]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\WideOr3~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Q[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Q[0]~reg0 .is_wysiwyg = "true";
defparam \Q[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X32_Y28_N30
cycloneiv_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (\Q[0]~reg0_q  & (\Q[3]~reg0_q  & (\Q[1]~reg0_q  $ (\Q[2]~reg0_q )))) # (!\Q[0]~reg0_q  & (\Q[2]~reg0_q  & ((\Q[3]~reg0_q ) # (!\Q[1]~reg0_q ))))

	.dataa(\Q[0]~reg0_q ),
	.datab(\Q[1]~reg0_q ),
	.datac(\Q[3]~reg0_q ),
	.datad(\Q[2]~reg0_q ),
	.cin(gnd),
	.combout(\WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = 16'h7180;
defparam \WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X32_Y28_N31
dffeas \Q[3]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\WideOr0~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Q[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Q[3]~reg0 .is_wysiwyg = "true";
defparam \Q[3]~reg0 .power_up = "low";
// synopsys translate_on

assign Q[0] = \Q[0]~output_o ;

assign Q[1] = \Q[1]~output_o ;

assign Q[2] = \Q[2]~output_o ;

assign Q[3] = \Q[3]~output_o ;

assign z = \z~output_o ;

endmodule
